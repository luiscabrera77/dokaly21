{"version":3,"sources":["utils/auth.js","components/Header/index.js","assets/Blackanese.mp3","components/Footer/index.js","components/Swipes/index.js","utils/queries.js","components/Cards/index.js","pages/Home.js","utils/mutations.js","pages/Login.js","pages/NoMatch.js","components/ReactionList/index.js","components/ReactionForm/index.js","pages/SingleThought.js","components/ThoughtList/index.js","components/FriendList/index.js","pages/Profile.js","pages/Signup.js","components/ThoughtForm/index.js","pages/Submit.js","App.js","serviceWorker.js","index.js"],"names":["decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","logout","event","preventDefault","Auth","Header","className","to","src","alt","style","width","loggedIn","href","onClick","Footer","id","allow","loop","controls","Blackanese","type","sleep","require","settings","getElementSize","element","elementStyles","getComputedStyle","widthString","getPropertyValue","Number","split","heightString","x","y","pythagoras","Math","sqrt","pow","animateOut","speed","a","easeIn","startPos","getTranslate","bodySize","document","body","diagonal","velocity","time","multiplier","translateString","translationString","rotateString","rotationPower","transition","getRotation","rotationString","random","transform","animateBack","startingPoint","translation","rotation","setTimeout","getSwipeDirection","abs","calcSpeed","oldLocation","newLocation","dx","dy","dt","rot","matrix","WebKitCSSMatrix","webkitTransform","m41","m42","asin","m21","PI","dragableTouchmove","coordinates","offset","lastLocation","pos","getTime","rotCalc","touchCoordinatesFromEvent","e","touchLocation","targetTouches","clientX","clientY","mouseCoordinatesFromEvent","Swipes","React","forwardRef","perentRef","elementGlobal","flickOnSwipe","children","onSwipe","onCardLeftScreen","preventSwipe","swipeAlreadyReleased","useRef","useImperativeHandle","swipe","dir","power","disturbance","display","handleSwipeReleased","useCallback","current","includes","handleSwipeStart","ref","mouseIsClicked","addEventListener","ev","createElement","QUERY_THOUGHTS","gql","QUERY_THOUGHT","QUERY_USER","QUERY_ME","Cards","data","useQuery","db","thoughts","map","thought","name","username","url","thoughtText","_id","alreadyRemoved","charactersState","useState","setCharacters","setLastDirection","childRefs","useMemo","Array","length","fill","i","createRef","character","index","direction","nameToDelete","console","log","push","filter","backgroundImage","Home","userParam","useParams","variables","loading","me","user","LOGIN_USER","ADD_USER","ADD_THOUGHT","ADD_REACTION","ADD_FRIEND","Login","props","email","password","formState","setFormState","useMutation","login","error","handleChange","target","value","handleFormSubmit","onSubmit","placeholder","onChange","NoMatch","ReactionList","reactions","reaction","fontWeight","reactionBody","ReactionForm","thoughtId","setBody","characterCount","setCharacterCount","addReaction","SingleThought","reactionCount","ThoughtList","FriendList","friendCount","friends","friend","Profile","addFriend","getProfile","handleClick","alert","Signup","addUser","ThoughtForm","setText","update","cache","addThought","readQuery","query","writeQuery","Submit","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","InMemoryCache","App","ApolloProvider","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","getElementById","URL","process","origin","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6c302808.chunk.js","sourcesContent":["import decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n  // retrieve data saved in token\r\n  getProfile() {\r\n    return decode(this.getToken());\r\n  }\r\n\r\n  // check if the user is still logged in\r\n  loggedIn() {\r\n    // Checks if there is a saved token and it's still valid\r\n    const token = this.getToken();\r\n    // use type coersion to check if token is NOT undefined and the token is NOT expired\r\n    return !!token && !this.isTokenExpired(token);\r\n  }\r\n\r\n  // check if the token has expired\r\n  isTokenExpired(token) {\r\n    try {\r\n      const decoded = decode(token);\r\n      if (decoded.exp < Date.now() / 1000) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    } catch (err) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // retrieve token from localStorage\r\n  getToken() {\r\n    // Retrieves the user token from localStorage\r\n    return localStorage.getItem('id_token');\r\n  }\r\n\r\n  // set token to localStorage and reload page to homepage\r\n  login(idToken) {\r\n    // Saves user token to localStorage\r\n    localStorage.setItem('id_token', idToken);\r\n\r\n    window.location.assign('/');\r\n  }\r\n\r\n  // clear token from localStorage and force logout with reload\r\n  logout() {\r\n    // Clear user token and profile data from localStorage\r\n    localStorage.removeItem('id_token');\r\n    // this will reload the page and reset the state of the application\r\n    window.location.assign('/');\r\n  }\r\n}\r\n\r\nexport default new AuthService();","import Auth from '../../utils/auth';\r\nimport { Link } from 'react-router-dom';\r\nimport React from 'react';\r\n\r\nconst logout = event => {\r\n  event.preventDefault();\r\n  Auth.logout();\r\n};\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"mb-4 py-2 align-center\">\r\n      <div className=\"container flex-row justify-center align-center\">\r\n        <Link to=\"/\">\r\n          <img src=\"/DOKALY-LOGO.png\" alt=\"DOKALY HOME\" style={{width:150}}/>\r\n        </Link>\r\n\r\n        <nav className=\"centered\">\r\n          {Auth.loggedIn() ? (\r\n            <>\r\n              <Link to=\"/\">Home</Link>\r\n              <Link to=\"/submit\" className=\"mt-3\">Contribute</Link>\r\n              <Link to=\"/profile\">Me</Link>\r\n              <a href=\"/\" onClick={logout}>\r\n                Logout\r\n              </a>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Link to=\"/\">Home</Link>\r\n              <Link to=\"/submit\">Contribute</Link>\r\n              <Link to=\"/login\">Login</Link>\r\n              <Link to=\"/signup\">Signup</Link>\r\n            </>\r\n          )}\r\n        </nav>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/Blackanese.f76119c8.mp3\";","import React from 'react';\r\nimport Blackanese from '../../assets/Blackanese.mp3';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"w-100 mt-auto p-4\">\r\n      <audio id=\"player\" allow=\"autoplay\" loop controls>\r\n        <source src={Blackanese} type=\"audio/mpeg\" />\r\n      </audio><br />\r\n      <div className=\"text-center\">&copy;2021 Furious 6ix</div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","/* global WebKitCSSMatrix */\r\nimport React from 'react'\r\n\r\nconst sleep = require('p-sleep')\r\n\r\nconst settings = {\r\n  snapBackDuration: 300,\r\n  maxTilt: 5,\r\n  bouncePower: 0.2,\r\n  swipeThreshold: 300 // px/s\r\n}\r\n\r\nconst getElementSize = (element) => {\r\n  const elementStyles = window.getComputedStyle(element)\r\n  const widthString = elementStyles.getPropertyValue('width')\r\n  const width = Number(widthString.split('px')[0])\r\n  const heightString = elementStyles.getPropertyValue('height')\r\n  const height = Number(heightString.split('px')[0])\r\n  return { x: width, y: height }\r\n}\r\n\r\nconst pythagoras = (x, y) => {\r\n  return Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2))\r\n}\r\n\r\nconst animateOut = async (element, speed, easeIn = false) => {\r\n  const startPos = getTranslate(element)\r\n  const bodySize = getElementSize(document.body)\r\n  const diagonal = pythagoras(bodySize.x, bodySize.y)\r\n\r\n  const velocity = pythagoras(speed.x, speed.y)\r\n  const time = diagonal / velocity\r\n  const multiplier = diagonal / velocity\r\n\r\n  const translateString = translationString(speed.x * multiplier + startPos.x, -speed.y * multiplier + startPos.y)\r\n  let rotateString = ''\r\n\r\n  const rotationPower = 200\r\n\r\n  if (easeIn) {\r\n    element.style.transition = 'ease ' + time + 's'\r\n  } else {\r\n    element.style.transition = 'ease-out ' + time + 's'\r\n  }\r\n\r\n  if (getRotation(element) === 0) {\r\n    rotateString = rotationString((Math.random() - 0.5) * rotationPower)\r\n  } else if (getRotation(element) > 0) {\r\n    rotateString = rotationString((Math.random()) * rotationPower / 2 + getRotation(element))\r\n  } else {\r\n    rotateString = rotationString((Math.random() - 1) * rotationPower / 2 + getRotation(element))\r\n  }\r\n\r\n  element.style.transform = translateString + rotateString\r\n\r\n  await sleep(time * 1000)\r\n}\r\n\r\nconst animateBack = (element) => {\r\n  element.style.transition = settings.snapBackDuration + 'ms'\r\n  const startingPoint = getTranslate(element)\r\n  const translation = translationString(startingPoint.x * -settings.bouncePower, startingPoint.y * -settings.bouncePower)\r\n  const rotation = rotationString(getRotation(element) * -settings.bouncePower)\r\n  element.style.transform = translation + rotation\r\n\r\n  setTimeout(() => {\r\n    element.style.transform = 'none'\r\n  }, settings.snapBackDuration * 0.75)\r\n\r\n  setTimeout(() => {\r\n    element.style.transition = '10ms'\r\n  }, settings.snapBackDuration)\r\n}\r\n\r\nconst getSwipeDirection = (speed) => {\r\n  if (Math.abs(speed.x) > Math.abs(speed.y)) {\r\n    return (speed.x > 0) ? 'right' : 'left'\r\n  } else {\r\n    return (speed.y > 0) ? 'up' : 'down'\r\n  }\r\n}\r\n\r\nconst calcSpeed = (oldLocation, newLocation) => {\r\n  const dx = newLocation.x - oldLocation.x\r\n  const dy = oldLocation.y - newLocation.y\r\n  const dt = (newLocation.time - oldLocation.time) / 1000\r\n  return { x: dx / dt, y: dy / dt }\r\n}\r\n\r\nconst translationString = (x, y) => {\r\n  const translation = 'translate(' + x + 'px, ' + y + 'px)'\r\n  return translation\r\n}\r\n\r\nconst rotationString = (rot) => {\r\n  const rotation = 'rotate(' + rot + 'deg)'\r\n  return rotation\r\n}\r\n\r\nconst getTranslate = (element) => {\r\n  const style = window.getComputedStyle(element)\r\n  const matrix = new WebKitCSSMatrix(style.webkitTransform)\r\n  const ans = { x: matrix.m41, y: matrix.m42 }\r\n  return ans\r\n}\r\n\r\nconst getRotation = (element) => {\r\n  const style = window.getComputedStyle(element)\r\n  const matrix = new WebKitCSSMatrix(style.webkitTransform)\r\n  const ans = -Math.asin(matrix.m21) / (2 * Math.PI) * 360\r\n  return ans\r\n}\r\n\r\nconst dragableTouchmove = (coordinates, element, offset, lastLocation) => {\r\n  const pos = { x: coordinates.x + offset.x, y: coordinates.y + offset.y }\r\n  const newLocation = { x: pos.x, y: pos.y, time: new Date().getTime() }\r\n  const translation = translationString(pos.x, pos.y)\r\n  const rotCalc = calcSpeed(lastLocation, newLocation).x / 1000\r\n  const rotation = rotationString(rotCalc * settings.maxTilt)\r\n  element.style.transform = translation + rotation\r\n  return newLocation\r\n}\r\n\r\nconst touchCoordinatesFromEvent = (e) => {\r\n  const touchLocation = e.targetTouches[0]\r\n  return { x: touchLocation.clientX, y: touchLocation.clientY }\r\n}\r\n\r\nconst mouseCoordinatesFromEvent = (e) => {\r\n  return { x: e.clientX, y: e.clientY }\r\n}\r\n\r\nconst Swipes = React.forwardRef(({ flickOnSwipe = true, children, onSwipe, onCardLeftScreen, className, preventSwipe = [] }, perentRef) => {\r\n  const swipeAlreadyReleased = React.useRef(false)\r\n\r\n  let elementGlobal\r\n\r\n  React.useImperativeHandle(perentRef, () => ({\r\n    async swipe (dir = 'right') {\r\n      if (onSwipe) onSwipe(dir)\r\n      const power = 1000\r\n      const disturbance = (Math.random() - 0.5) * 100\r\n      if (dir === 'right') {\r\n        await animateOut(elementGlobal, { x: power, y: disturbance }, true)\r\n      } else if (dir === 'left') {\r\n        await animateOut(elementGlobal, { x: -power, y: disturbance }, true)\r\n      } else if (dir === 'up') {\r\n        await animateOut(elementGlobal, { x: disturbance, y: power }, true)\r\n      } else if (dir === 'down') {\r\n        await animateOut(elementGlobal, { x: disturbance, y: -power }, true)\r\n      }\r\n      elementGlobal.style.display = 'none'\r\n      if (onCardLeftScreen) onCardLeftScreen(dir)\r\n    }\r\n  }))\r\n\r\n  const handleSwipeReleased = React.useCallback(async (element, speed) => {\r\n    if (swipeAlreadyReleased.current) { return }\r\n    swipeAlreadyReleased.current = true\r\n\r\n    // Check if this is a swipe\r\n    if (Math.abs(speed.x) > settings.swipeThreshold || Math.abs(speed.y) > settings.swipeThreshold) {\r\n      const dir = getSwipeDirection(speed)\r\n\r\n      if (onSwipe) onSwipe(dir)\r\n\r\n      if (flickOnSwipe) {\r\n        if (!preventSwipe.includes(dir)) {\r\n          await animateOut(element, speed)\r\n          element.style.display = 'none'\r\n          if (onCardLeftScreen) onCardLeftScreen(dir)\r\n          return\r\n        }\r\n      }\r\n    }\r\n\r\n    // Card was not flicked away, animate back to start\r\n    animateBack(element)\r\n  }, [swipeAlreadyReleased, flickOnSwipe, onSwipe, onCardLeftScreen, preventSwipe])\r\n\r\n  const handleSwipeStart = React.useCallback(() => {\r\n    swipeAlreadyReleased.current = false\r\n  }, [swipeAlreadyReleased])\r\n\r\n  const ref = React.useCallback((element) => {\r\n    if (!element) { return } // necesarry?\r\n    elementGlobal = element\r\n    let offset = { x: null, y: null }\r\n    let speed = { x: 0, y: 0 }\r\n    let lastLocation = { x: 0, y: 0, time: new Date().getTime() }\r\n    let mouseIsClicked = false\r\n\r\n    element.addEventListener(('touchstart'), (ev) => {\r\n      ev.preventDefault()\r\n      handleSwipeStart()\r\n      offset = { x: -touchCoordinatesFromEvent(ev).x, y: -touchCoordinatesFromEvent(ev).y }\r\n    })\r\n\r\n    element.addEventListener(('mousedown'), (ev) => {\r\n      ev.preventDefault()\r\n      mouseIsClicked = true\r\n      handleSwipeStart()\r\n      offset = { x: -mouseCoordinatesFromEvent(ev).x, y: -mouseCoordinatesFromEvent(ev).y }\r\n    })\r\n\r\n    element.addEventListener(('touchmove'), (ev) => {\r\n      ev.preventDefault()\r\n      const newLocation = dragableTouchmove(touchCoordinatesFromEvent(ev), element, offset, lastLocation)\r\n      speed = calcSpeed(lastLocation, newLocation)\r\n      lastLocation = newLocation\r\n    })\r\n\r\n    element.addEventListener(('mousemove'), (ev) => {\r\n      ev.preventDefault()\r\n      if (mouseIsClicked) {\r\n        const newLocation = dragableTouchmove(mouseCoordinatesFromEvent(ev), element, offset, lastLocation)\r\n        speed = calcSpeed(lastLocation, newLocation)\r\n        lastLocation = newLocation\r\n      }\r\n    })\r\n\r\n    element.addEventListener(('touchend'), (ev) => {\r\n      ev.preventDefault()\r\n      handleSwipeReleased(element, speed)\r\n    })\r\n\r\n    element.addEventListener(('mouseup'), (ev) => {\r\n      if (mouseIsClicked) {\r\n        ev.preventDefault()\r\n        mouseIsClicked = false\r\n        handleSwipeReleased(element, speed)\r\n      }\r\n    })\r\n\r\n    element.addEventListener(('mouseleave'), (ev) => {\r\n      if (mouseIsClicked) {\r\n        ev.preventDefault()\r\n        mouseIsClicked = false\r\n        handleSwipeReleased(element, speed)\r\n      }\r\n    })\r\n  }, [handleSwipeReleased, handleSwipeStart])\r\n\r\n  return (\r\n    React.createElement('div', { ref, className }, children)\r\n  )\r\n})\r\n\r\nexport default Swipes;","import { gql } from '@apollo/client';\r\n\r\nexport const QUERY_THOUGHTS = gql`\r\n  query thoughts($username: String) {\r\n    thoughts(username: $username) {\r\n      _id\r\n      thoughtText\r\n      createdAt\r\n      username\r\n      reactionCount\r\n      reactions {\r\n        _id\r\n        createdAt\r\n        username\r\n        reactionBody\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_THOUGHT = gql`\r\n  query thought($id: ID!) {\r\n    thought(_id: $id) {\r\n      _id\r\n      thoughtText\r\n      createdAt\r\n      username\r\n      reactionCount\r\n      reactions {\r\n        _id\r\n        createdAt\r\n        username\r\n        reactionBody\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_USER = gql`\r\n  query user($username: String!) {\r\n    user(username: $username) {\r\n      _id\r\n      username\r\n      email\r\n      friendCount\r\n      friends {\r\n        _id\r\n        username\r\n      }\r\n      thoughts {\r\n        _id\r\n        thoughtText\r\n        createdAt\r\n        reactionCount\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_ME = gql`\r\n  {\r\n    me {\r\n      _id\r\n      username\r\n      email\r\n      friendCount\r\n      thoughts {\r\n        _id\r\n        thoughtText\r\n        createdAt\r\n        reactionCount\r\n        reactions {\r\n          _id\r\n          createdAt\r\n          reactionBody\r\n          username\r\n        }\r\n      }\r\n      friends {\r\n        _id\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_ME_BASIC = gql`\r\n  {\r\n    me {\r\n      _id\r\n      username\r\n      email\r\n      friendCount\r\n      friends {\r\n        _id\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;","import { Link } from 'react-router-dom';\r\nimport React, { useState, useMemo } from 'react'\r\nimport Swipes from '../Swipes'\r\n\r\nimport { useQuery } from '@apollo/client';\r\nimport { QUERY_THOUGHTS } from '../../utils/queries';\r\n\r\nfunction Cards () {\r\n\r\n  const { data } = useQuery(QUERY_THOUGHTS);\r\n  const thoughts = data?.thoughts || [];\r\n  //console.log(thoughts);\r\n  var db=thoughts.map(thought => {return {name:thought.username, url: thought.thoughtText, id:thought._id}});\r\n  const alreadyRemoved = []\r\n\r\n  let charactersState = db // This fixes issues with updating characters state forcing it to use the current state and not the state that was active when the card was created.\r\n  \r\n  const [characters, setCharacters] = useState(db)\r\n  const [lastDirection, setLastDirection] = useState()\r\n\r\n  const childRefs = useMemo(() => Array(db.length).fill(0).map(i => React.createRef()), [])\r\n\r\n  const swiped = (direction, nameToDelete) => {\r\n    console.log('removing: ' + nameToDelete)\r\n    setLastDirection(direction)\r\n    alreadyRemoved.push(nameToDelete)\r\n  }\r\n\r\n  const outOfFrame = (name) => {\r\n    console.log(name + ' left the screen!')\r\n    charactersState = charactersState.filter(character => character.name !== name)\r\n    setCharacters(charactersState)\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div id='cardDivs'>\r\n      <div className='cardContainer'>\r\n        {db.map((character, index) =>\r\n          <Swipes ref={childRefs[index]} className='swipe' key={character.url} onSwipe={(dir) => swiped(dir, character.name)} onCardLeftScreen={() => outOfFrame(character.name)}>\r\n            <div style={{ backgroundImage: 'url(' + character.url + ')' }} className='card'>\r\n            <Link to={`profile/${character.name}`}>\r\n              <h3>by {character.name}</h3>\r\n            </Link>\r\n            <Link to={`thought/${character.id}`}>\r\n            <div className=\"buttons\">\r\n              <button className=\"button\">Comment</button>\r\n            </div>\r\n            </Link>\r\n            </div>\r\n          </Swipes>\r\n        )}\r\n      </div>\r\n      <br /><br />\r\n      <div className=\"textcontainer centered px-3\">\r\n      <h3 className='infoText'>Press play, swipe through the art, comment on what you like, follow artists and submit your own art!</h3>\r\n      </div>\r\n      {/*<div className='buttons hidden'>\r\n        <button onClick={() => swipe('left')}>No</button>\r\n        <button onClick={() => swipe('right')}>Yes</button>\r\n      </div>\r\n      <br /><br />\r\n      <div className=\"textcontainer centered px-3\">\r\n        {lastDirection ? <h2 key={lastDirection} className='infoText'>You swiped {lastDirection}</h2> : <h3 className='infoText'>Press play to start listening, and then swipe through the cards. Comment on the ones you feel that go well with the song!</h3>}\r\n      </div>*/}\r\n\r\n      {/* when lastDirection === \"right\", grab \"thought.id\" \r\n      and fill out and submit the Reaction form with \"right\"*/}\r\n\r\n      {/* per card, declare a new constant \"rightswipeTHOUGHTID\" \r\n      and when lastDirection === \"right\", +1 */}\r\n\r\n      {/* look for the H3 HTML tag with ID \"characterID\" and \r\n      extract the content to get the ID\"*/}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Cards","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport Auth from '../utils/auth';\r\nimport Cards from '../components/Cards';\r\n\r\nimport { useQuery } from '@apollo/client';\r\nimport { QUERY_USER, QUERY_ME } from '../utils/queries';\r\n\r\nconst Home = () => {\r\n  const { username: userParam } = useParams();\r\n  const { loading, data } = useQuery(userParam ? QUERY_USER : QUERY_ME, {\r\n    variables: { username: userParam }\r\n  });\r\n\r\n  const user = data?.me || data?.user || {};\r\n\r\n  const loggedIn = Auth.loggedIn();\r\n  return (\r\n<main>\r\n  <div className=\"centered\">\r\n    {loggedIn ? (\r\n      < Cards />\r\n    ):( <div className=\"textcontainer\">\r\n      <h3 className='infoText px-3'>\r\n      Today's Featured Artist and song:\r\n      </h3>\r\n      <img src=\"/cover.png\" alt=\"DJKAZ\" style={{width:350}}/>\r\n      </div>\r\n    )}\r\n  </div>\r\n</main>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import gql from 'graphql-tag';\r\n\r\nexport const LOGIN_USER = gql`\r\n  mutation login($email: String!, $password: String!) {\r\n    login(email: $email, password: $password) {\r\n      token\r\n      user {\r\n        _id\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_USER = gql`\r\n  mutation addUser($username: String!, $email: String!, $password: String!) {\r\n    addUser(username: $username, email: $email, password: $password) {\r\n      token\r\n      user {\r\n        _id\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_THOUGHT = gql`\r\n  mutation addThought($thoughtText: String!) {\r\n    addThought(thoughtText: $thoughtText) {\r\n      _id\r\n      thoughtText\r\n      createdAt\r\n      username\r\n      reactionCount\r\n      reactions {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_REACTION = gql`\r\n  mutation addReaction($thoughtId: ID!, $reactionBody: String!) {\r\n    addReaction(thoughtId: $thoughtId, reactionBody: $reactionBody) {\r\n      _id\r\n      reactionCount\r\n      reactions {\r\n        _id\r\n        reactionBody\r\n        createdAt\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_FRIEND = gql`\r\n  mutation addFriend($id: ID!) {\r\n    addFriend(friendId: $id) {\r\n      _id\r\n      username\r\n      friendCount\r\n      friends {\r\n        _id\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const REMOVE_FRIEND = gql`\r\n  mutation removeFriend($id: ID!) {\r\n    removeFriend(id: $id) {\r\n      _id\r\n      username\r\n      friends {\r\n        _id\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport { LOGIN_USER } from '../utils/mutations';\r\nimport Auth from '../utils/auth';\r\n\r\n\r\nconst Login = (props) => {\r\n  const [formState, setFormState] = useState({ email: '', password: '' });\r\n  const [login, { error }] = useMutation(LOGIN_USER);\r\n\r\n  // update state based on form input changes\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  // submit form\r\n  const handleFormSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const { data } = await login({\r\n        variables: { ...formState }\r\n      });\r\n\r\n      console.log(data);\r\n      Auth.login(data.login.token);\r\n\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main className='flex-row justify-center mb-4'>\r\n      <div className='col-12 col-md-6'>\r\n        <div className='cardwide'>\r\n          <h4 className='card-header'>Login</h4>\r\n          <div className='card-body'>\r\n            <form onSubmit={handleFormSubmit}>\r\n              <input\r\n                className='form-input'\r\n                placeholder='Your email'\r\n                name='email'\r\n                type='email'\r\n                id='email'\r\n                value={formState.email}\r\n                onChange={handleChange}\r\n              />\r\n              <input\r\n                className='form-input'\r\n                placeholder='******'\r\n                name='password'\r\n                type='password'\r\n                id='password'\r\n                value={formState.password}\r\n                onChange={handleChange}\r\n              />\r\n              <button className='btn d-block w-100' type='submit'>\r\n                Submit\r\n              </button>\r\n            </form>\r\n            {error && <div className=\"text-error\">Login failed</div>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\n\r\nconst NoMatch = () => {\r\n  return (\r\n    <div>\r\n      Oops, we couldn't find that page.\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoMatch;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ReactionList = ({ reactions }) => {\r\n  return (\r\n\r\n    <div>\r\n        <div className=\"cardcomments\">\r\n        <br />\r\n        {reactions &&\r\n          reactions.map(reaction => (\r\n            <p key={reaction._id}>\r\n              <Link to={`/profile/${reaction.username}`} className=\"buttons\" style={{ fontWeight: 700 }}>\r\n                <button>{reaction.username}:</button>\r\n              </Link>\r\n              {reaction.reactionBody} {' '}\r\n            </p>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReactionList;","import React, { useState } from 'react';\r\n\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_REACTION } from '../../utils/mutations';\r\n\r\nconst ReactionForm = ({ thoughtId }) => {\r\n  const [reactionBody, setBody] = useState('');\r\n  const [characterCount, setCharacterCount] = useState(0);\r\n  const [addReaction, { error }] = useMutation(ADD_REACTION);\r\n\r\n  // update state based on form input changes\r\n  const handleChange = event => {\r\n    if (event.target.value.length <= 280) {\r\n      setBody(event.target.value);\r\n      setCharacterCount(event.target.value.length);\r\n    }\r\n  };\r\n\r\n  // submit form\r\n  const handleFormSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      await addReaction({\r\n        variables: { reactionBody, thoughtId }\r\n      });\r\n\r\n      // clear form value\r\n      setBody('');\r\n      setCharacterCount(0);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <p className={`m-0 ${characterCount === 280 || error ? 'text-error' : ''}`}>\r\n        {characterCount} characters (280 max)\r\n        {error && <span className=\"ml-2\">Something went wrong...</span>}\r\n      </p>\r\n      <form\r\n        className=\"flex-row justify-center justify-space-between-md align-stretch\"\r\n        onSubmit={handleFormSubmit}\r\n      >\r\n        <textarea\r\n          placeholder=\"Why is this a good (or bad) match for the song?\"\r\n          value={reactionBody}\r\n          className=\"form-input col-12\"\r\n          onChange={handleChange}\r\n        ></textarea>\r\n\r\n        <button className=\"btn col-12\" type=\"submit\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n\r\n      {error && <div>Something went wrong...</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReactionForm;\r\n","import { useParams } from 'react-router-dom';\r\nimport React from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport { QUERY_THOUGHT } from '../utils/queries';\r\nimport ReactionList from '../components/ReactionList';\r\nimport ReactionForm from '../components/ReactionForm';\r\nimport Auth from '../utils/auth';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst SingleThought = props => {\r\n  const { id: thoughtId } = useParams();\r\n\r\n  const { loading, data } = useQuery(QUERY_THOUGHT, {\r\n    variables: { id: thoughtId }\r\n  });\r\n  \r\n  const thought = data?.thought || {};\r\n  \r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  return (\r\n  <div>\r\n    <div className=\"cardContainer px-3\">\r\n      <div style={{ backgroundImage: 'url(' + thought.thoughtText + ')' }} className=\"card\">\r\n        <Link to={`/profile/${thought.username}`}>\r\n          <br />\r\n          <h3>by {thought.username}</h3>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n    {Auth.loggedIn() && <ReactionForm thoughtId={thought._id} />}\r\n    <h4>{thought.reactionCount} comments</h4>\r\n    {thought.reactionCount > 0 && <ReactionList reactions={thought.reactions} />}\r\n  </div>\r\n   \r\n  );\r\n};\r\n\r\nexport default SingleThought;\r\n","import { Link } from 'react-router-dom';\r\nimport React from 'react';\r\n\r\n\r\nconst ThoughtList = ({ thoughts }) => {\r\n  if (!thoughts.length) {\r\n    return <div>\r\n    <img src=\"https://media.giphy.com/media/XErx4Alxhy7Uo9D6hX/source.gif\" alt=\"No contributions\" style={{ width:350}}/>\r\n    <h3>No Contributions</h3>\r\n    </div>\r\n    ;\r\n\r\n  }\r\n\r\n  return (\r\n    <div id='cardDivs' className=\"px-3\">\r\n      <div className='cardContainerhorizontal'>\r\n        {thoughts &&\r\n          thoughts.map(thought => (\r\n            <div key={thought._id}>\r\n              <Link to={`/thought/${thought._id}`}>\r\n              <div style={{ backgroundImage: 'url(' + thought.thoughtText + ')' }} className='cardhorizontal'>\r\n              <h3>{thought.reactionCount} comments</h3>\r\n              </div>\r\n              </Link>  \r\n            </div>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThoughtList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst FriendList = ({ friendCount, username, friends }) => {\r\n  if (!friends || !friends.length) {\r\n    return <h5>{username} doesn't follow anyone yet!</h5>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"centered px-3\">\r\n        <h6>{username} follows</h6>\r\n      </div>\r\n      <div className=\"buttons\">\r\n      {friends.map(friend => (\r\n        <button className='button' key={friend._id}>\r\n          <Link to={`/profile/${friend.username}`} key={friend._id}>{friend.username}</Link>\r\n        </button>\r\n      ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FriendList;\r\n//{friendCount}","import React from 'react';\r\nimport { Redirect, useParams } from 'react-router-dom';\r\n\r\nimport ThoughtList from '../components/ThoughtList';\r\nimport FriendList from '../components/FriendList';\r\n\r\nimport { useMutation } from '@apollo/client';\r\nimport { useQuery } from '@apollo/client';\r\n\r\nimport { QUERY_USER, QUERY_ME } from '../utils/queries';\r\nimport { ADD_FRIEND } from '../utils/mutations';\r\nimport Auth from '../utils/auth';\r\n\r\nconst Profile = props => {\r\n  const { username: userParam } = useParams();\r\n\r\n  const [addFriend] = useMutation(ADD_FRIEND);\r\n  const { loading, data } = useQuery(userParam ? QUERY_USER : QUERY_ME, {\r\n    variables: { username: userParam }\r\n  });\r\n\r\n  const user = data?.me || data?.user || {};\r\n\r\n  // redirect to personal profile page if username is yours\r\n  if (\r\n    Auth.loggedIn() &&\r\n    Auth.getProfile().data.username === userParam\r\n  ) {\r\n    return <Redirect to=\"/profile\" />;\r\n  }\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (!user?.username) {\r\n    return (\r\n      <h4>\r\n        You need to be logged in to see this. Use the navigation links above to sign up or log in!\r\n      </h4>\r\n    );\r\n  }\r\n\r\n  const handleClick = async () => {\r\n    try {\r\n      await addFriend({\r\n        variables: { id: user._id }\r\n      });\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n    alert(\"A shortcut to this profile has been added in your Me page\");\r\n  };\r\n\r\n  return (\r\n    <div id=\"profilepage\" className=\"text-center\">\r\n      <div>\r\n        {userParam && (\r\n          <button className=\"btn ml-auto\" onClick={handleClick}>\r\n            Follow {user.username}\r\n          </button>\r\n        )}\r\n      </div>\r\n      <br />\r\n      <div>\r\n        <div>\r\n          <ThoughtList thoughts={user.thoughts} />\r\n        </div>\r\n        <div>\r\n          <FriendList\r\n            username={user.username}\r\n            friendCount={user.friendCount}\r\n            friends={user.friends}\r\n          />\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useState } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_USER } from '../utils/mutations';\r\nimport Auth from '../utils/auth';\r\n\r\nconst Signup = () => {\r\n  const [formState, setFormState] = useState({ username: '', email: '', password: '' });\r\n  const [addUser, { error }] = useMutation(ADD_USER);\r\n\r\n\r\n  // update state based on form input changes\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n// submit form (notice the async!)\r\nconst handleFormSubmit = async event => {\r\n  event.preventDefault();\r\n\r\n  // use try/catch instead of promises to handle errors\r\n  try {\r\n    // execute addUser mutation and pass in variable data from form\r\n    const { data } = await addUser({\r\n      variables: { ...formState }\r\n    });\r\n    console.log(data);\r\n    Auth.login(data.addUser.token);\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\n  return (\r\n    <main className='flex-row justify-center mb-4'>\r\n      <div className='col-12 col-md-6'>\r\n        <div className='cardwide'>\r\n          <h4 className='card-header'>Sign Up</h4>\r\n          <div className='card-body'>\r\n            <form onSubmit={handleFormSubmit}>\r\n              <input\r\n                className='form-input'\r\n                placeholder='Your username'\r\n                name='username'\r\n                type='username'\r\n                id='username'\r\n                value={formState.username}\r\n                onChange={handleChange}\r\n              />\r\n              <input\r\n                className='form-input'\r\n                placeholder='Your email'\r\n                name='email'\r\n                type='email'\r\n                id='email'\r\n                value={formState.email}\r\n                onChange={handleChange}\r\n              />\r\n              <input\r\n                className='form-input'\r\n                placeholder='******'\r\n                name='password'\r\n                type='password'\r\n                id='password'\r\n                value={formState.password}\r\n                onChange={handleChange}\r\n              />\r\n              <button className='btn d-block w-100' type='submit'>\r\n                Submit\r\n              </button>\r\n            </form>\r\n            {error && <div>Sign up failed</div>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React, { useState } from 'react';\r\n\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_THOUGHT } from '../../utils/mutations';\r\nimport { QUERY_THOUGHTS, QUERY_ME } from '../../utils/queries';\r\n\r\nconst ThoughtForm = () => {\r\n  const [thoughtText, setText] = useState('');\r\n  const [characterCount, setCharacterCount] = useState(0);\r\n\r\n  const [addThought, { error }] = useMutation(ADD_THOUGHT, {\r\n    update(cache, { data: { addThought } }) {\r\n      try {\r\n        // update thought array's cache\r\n        // could potentially not exist yet, so wrap in a try/catch\r\n        const { thoughts } = cache.readQuery({ query: QUERY_THOUGHTS });\r\n        cache.writeQuery({\r\n          query: QUERY_THOUGHTS,\r\n          data: { thoughts: [addThought, ...thoughts] }\r\n        });\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n\r\n      // update me object's cache\r\n      const { me } = cache.readQuery({ query: QUERY_ME });\r\n      cache.writeQuery({\r\n        query: QUERY_ME,\r\n        data: { me: { ...me, thoughts: [...me.thoughts, addThought] } }\r\n      });\r\n    }\r\n  });\r\n\r\n  // update state based on form input changes\r\n  const handleChange = event => {\r\n    if (event.target.value.length <= 280) {\r\n      setText(event.target.value);\r\n      setCharacterCount(event.target.value.length);\r\n    }\r\n  };\r\n\r\n  // submit form\r\n  const handleFormSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      await addThought({\r\n        variables: { thoughtText }\r\n      });\r\n\r\n      // clear form value\r\n      setText('');\r\n      setCharacterCount(0);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n    alert(\"We got it, thank you!\");\r\n  };\r\n\r\n  return (\r\n    <main className='flex-row justify-center mb-4'>\r\n      <div className='col-8 col-md-6'>\r\n        <div className='cardwide'>\r\n          <h4 className='card-header'>Contribute</h4>\r\n          <div className='card-body'>\r\n            <p className={`m-0 ${characterCount === 280 || error ? 'text-error' : ''}`}>\r\n              {error && <span className=\"ml-2\">Something went wrong...</span>}\r\n            </p>\r\n            <form onSubmit={handleFormSubmit}>\r\n              <textarea\r\n                placeholder=\"Enter the URL of a picture.\"\r\n                value={thoughtText}\r\n                className=\"form-input\"\r\n                onChange={handleChange}\r\n              ></textarea>\r\n              <button className=\"btn d-block w-100\" type=\"submit\">\r\n                Submit\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"centered px-3\">\r\n      <br />\r\n      Make sure that you have permission to use that picture!\r\n      </div>\r\n    </main>\r\n        );\r\n};\r\n\r\nexport default ThoughtForm;\r\n","import React from 'react';\r\nimport ThoughtForm from '../components/ThoughtForm';\r\n\r\nimport Auth from '../utils/auth';\r\n// import { useQuery } from '@apollo/client';\r\n// import { QUERY_THOUGHTS } from '../utils/queries';\r\n\r\n\r\n\r\nconst Submit = () => {\r\n  // use useQuery hook to make query request\r\n  // const { loading } = useQuery(QUERY_THOUGHTS);\r\n  // use object destructuring to extract `data` from the `useQuery` Hook's response and rename it `userData` to be more descriptive\r\n  const loggedIn = Auth.loggedIn();\r\n\r\n  return (\r\n<main>\r\n  <div className=\"flex-row justify-space-between\">\r\n    {loggedIn ? (\r\n      <div className=\"col-12 mb-3\">\r\n        <ThoughtForm />\r\n      </div>\r\n    ):( <div className=\"col-12 mb-3\">\r\n      <h3>Please login or sign up to contribute</h3>\r\n      </div>\r\n    )}\r\n  </div>\r\n</main>\r\n  );\r\n};\r\n\r\nexport default Submit;\r\n","import { ApolloProvider, ApolloClient, InMemoryCache, createHttpLink } from '@apollo/client';\r\nimport { setContext } from '@apollo/client/link/context';\r\n\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport React from 'react';\r\n\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\n\r\nimport Home from './pages/Home';\r\n\r\nimport Login from './pages/Login';\r\nimport NoMatch from './pages/NoMatch';\r\nimport SingleThought from './pages/SingleThought';\r\nimport Profile from './pages/Profile';\r\nimport Signup from './pages/Signup';\r\nimport Submit from './pages/Submit';\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: '/graphql',\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  const token = localStorage.getItem('id_token');\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : '',\r\n    },\r\n  };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <Router>\r\n        <div className=\"flex-column justify-flex-start min-100-vh\">\r\n          <Header />\r\n          <div className=\"container\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route exact path=\"/login\" component={Login} />\r\n            <Route exact path=\"/signup\" component={Signup} />\r\n            <Route exact path=\"/profile/:username?\" component={Profile} />\r\n            <Route exact path=\"/thought/:id\" component={SingleThought} />\r\n            <Route exact path=\"/submit\" component={Submit} />\r\n\r\n            <Route component={NoMatch} />\r\n          </Switch>\r\n          </div>\r\n          <Footer />\r\n        </div>\r\n      </Router>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}